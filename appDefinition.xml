<appDefinition>
   <appId>solutionApp</appId>
   <id>solutionApp</id>
   <version></version>
   <name>Solution App</name>
   <packageDefinitionList>
      <packageDefinition>
         <appId>solutionApp</appId>
         <id>solutionApp</id>
         <name>Solution App</name>
         <packageActivityFormMap>
            <entry>
               <string>process1::runProcess</string>
               <packageActivityForm>
                  <processDefId>process1</processDefId>
                  <activityDefId>runProcess</activityDefId>
                  <formId>solutionForm</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>false</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>process1::activityStep3</string>
               <packageActivityForm>
                  <processDefId>process1</processDefId>
                  <activityDefId>activityStep3</activityDefId>
                  <formId>uploadCoverFrom</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>true</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
            <entry>
               <string>process1::activityStep2</string>
               <packageActivityForm>
                  <processDefId>process1</processDefId>
                  <activityDefId>activityStep2</activityDefId>
                  <formId>generateForm</formId>
                  <type>SINGLE</type>
                  <autoContinue>false</autoContinue>
                  <disableSaveAsDraft>true</disableSaveAsDraft>
               </packageActivityForm>
            </entry>
         </packageActivityFormMap>
         <packageActivityPluginMap>
            <entry>
               <string>process1::uploadCover</string>
               <packageActivityPlugin>
                  <processDefId>process1</processDefId>
                  <activityDefId>uploadCover</activityDefId>
                  <pluginName>com.joget.bcircle.UploadAlfresco</pluginName>
                  <pluginProperties>{&quot;url&quot;:&quot;#envVariable.endPoint#\/alfresco&quot;,&quot;path&quot;:&quot;\/UploadBC\/Prince\/#form.solution.id#&quot;,&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;admin&quot;,&quot;parameters&quot;:[{&quot;key&quot;:&quot;fileName&quot;,&quot;value&quot;:&quot;#form.solution.id#&quot;}],&quot;formDefId&quot;:&quot;solutionForm&quot;,&quot;fields&quot;:[{&quot;field&quot;:&quot;uploadDoc&quot;}],&quot;scheduleEnable&quot;:&quot;true&quot;,&quot;dbTable&quot;:&quot;solution&quot;,&quot;variableUpload&quot;:&quot;&quot;,&quot;statusEnable&quot;:&quot;&quot;,&quot;fieldStatus&quot;:&quot;&quot;,&quot;statusTable&quot;:&quot;&quot;,&quot;isInherited&quot;:&quot;true&quot;,&quot;permissions&quot;:&quot;&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>process1::setVariable</string>
               <packageActivityPlugin>
                  <processDefId>process1</processDefId>
                  <activityDefId>setVariable</activityDefId>
                  <pluginName>org.joget.apps.app.lib.BeanShellTool</pluginName>
                  <pluginProperties>{&quot;script&quot;:&quot;import org.joget.apps.app.service.*;\r\nimport org.joget.apps.form.dao.*;\r\nimport org.joget.apps.form.model.*;\r\nimport org.joget.apps.form.service.*;\r\nimport org.joget.workflow.model.*;\r\nimport org.joget.workflow.model.service.*;\r\nimport java.sql.*;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.json.JSONObject;\r\nimport org.json.JSONArray;\r\nimport java.text.SimpleDateFormat;  \r\nimport java.util.Date;\r\nimport java.text.DateFormat;\r\nimport java.util.Calendar;\r\nimport java.text.DecimalFormat;\r\n\r\nimport org.apache.commons.codec.binary.Base64;\r\nimport org.joget.commons.util.FileManager;\r\nimport org.joget.commons.util.UuidGenerator;\r\n\r\nimport java.awt.Graphics2D;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\n\r\nimport java.io.ByteArrayInputStream;\r\n\r\nimport sun.misc.BASE64Decoder;\r\n\r\nimport javax.imageio.ImageIO;\r\n\r\nimport org.apache.commons.lang.StringEscapeUtils;\r\n\r\npublic  debug(String str) {\r\n    LogUtil.info(\&quot;Set Sign : \&quot;, str);\r\n    \/\/System.out.println(str);\r\n}\r\npublic  error(Exception e,String str) {\r\n    LogUtil.error(\&quot;Set Sign : \&quot;,e, str);\r\n    \/\/System.out.println(str);\r\n}\r\npublic  setVariable(String key, String value) {\r\n    \/\/utility bean\r\n    WorkflowManager workflowManager = (WorkflowManager) AppUtil.getApplicationContext().getBean(\&quot;workflowManager\&quot;); \r\n    \/\/get foreign key\r\n    String processId = workflowAssignment.getProcessId();\r\n    workflowManager.processVariable(processId, key, value);\r\n    debug(\&quot;variable : \&quot;+key + \&quot; = \&quot; + value);\r\n}\r\npublic getValueGen(){\r\n    JSONArray ary = new JSONArray(\&quot;[]\&quot;);\r\n    JSONObject obj = new JSONObject();\r\n    obj.put(\&quot;count\&quot;,\&quot;1\&quot;);\r\n    obj.put(\&quot;storeName\&quot;,\&quot;Big C\&quot;);\r\n    obj.put(\&quot;price\&quot;,StringEscapeUtils.escapeXml(\&quot;1,000\&quot;));\r\n    JSONObject obj2 = new JSONObject();\r\n    obj2.put(\&quot;count\&quot;,\&quot;2\&quot;);\r\n    obj2.put(\&quot;storeName\&quot;,\&quot;Big C2\&quot;);\r\n    obj2.put(\&quot;price\&quot;,\&quot;2,000\&quot;);  \r\n    ary.put(obj);\r\n    ary.put(obj2);\r\n    setVariable(\&quot;t2\&quot;,ary.toString());\r\n    \r\n    JSONArray ary3 = new JSONArray(\&quot;[]\&quot;);\r\n    JSONObject obj3 = new JSONObject();\r\n    obj3.put(\&quot;name\&quot;,\&quot;Aaaa\&quot;);\r\n    String ss = StringEscapeUtils.escapeXml(\&quot;Bb &lt; &gt; ! # $ % ^ &amp; * ( ) : ; - _ =  bb\&quot;);\r\n    debug(ss);\r\n    obj3.put(\&quot;name\&quot;,ss);\r\n    ary3.put(obj3);\r\n    setVariable(\&quot;t1\&quot;,ary3.toString());\r\n}\r\npublic deleteFile(File tempFile){\r\n    try{\r\n        debug(\&quot;tempFile : \&quot;+tempFile.getPath()+\&quot; , exists() : \&quot; + tempFile.exists());\r\n        if (tempFile.exists()) {\r\n            debug(\&quot;tempFile path : \&quot; + tempFile.getParentFile());\r\n            File tempDirectory = tempFile.getParentFile();\r\n            \/\/if (tempFile.delete()) {\r\n            \/\/    debug(\&quot;delete tempFile \&quot;);\r\n            \/\/}\r\n            \/\/if (tempDirectory.listFiles().length != 0) {\r\n                FileManager.deleteFile(tempDirectory);\r\n                tempDirectory.delete();\r\n            \/\/}\r\n        }\r\n    }catch(Exception e){\r\n        error(e,e.toString());\r\n    }\r\n}\r\npublic String createFile(String fileName) {\r\n        String path = UuidGenerator.getInstance().getUuid() + File.separator;\r\n        File uploadFile = new File(FileManager.getBaseDirectory(), path);\r\n        debug(\&quot;path : \&quot; + FileManager.getBaseDirectory() + path);\r\n        debug(\&quot;uploadFile : \&quot; + uploadFile.getPath());\r\n        if (!uploadFile.isDirectory()) {\r\n            (new File(FileManager.getBaseDirectory(), path)).mkdirs();\r\n        }\r\n        String filePath = uploadFile.getPath() + File.separator + fileName;\r\n        return filePath;\r\n    }\r\npublic  resize(String inputImagePath,\r\n                              String outputImagePath, int scaledWidth, int scaledHeight)\r\n            throws IOException {\r\n        \/\/ reads input image\r\n        File inputFile = new File(inputImagePath);\r\n        BufferedImage inputImage = ImageIO.read(inputFile);\r\n\r\n        \/\/ creates output image\r\n        BufferedImage outputImage = new BufferedImage(scaledWidth,\r\n                scaledHeight, inputImage.getType());\r\n\r\n        \/\/ scales the input image to the output image\r\n        Graphics2D g2d = outputImage.createGraphics();\r\n        g2d.drawImage(inputImage, 0, 0, scaledWidth, scaledHeight, null);\r\n        g2d.dispose();\r\n\r\n        \/\/ extracts extension of output file\r\n        String formatName = outputImagePath.substring(outputImagePath\r\n                .lastIndexOf(\&quot;.\&quot;) + 1);\r\n\r\n        \/\/ writes to output file\r\n        ImageIO.write(outputImage, formatName, new File(outputImagePath));\r\n        deleteFile(inputFile);\r\n    }\r\nprivate copyFileUsingStream(File source, File dest) throws IOException {\r\n    InputStream is = null;\r\n    OutputStream os = null;\r\n    try {\r\n        is = new FileInputStream(source);\r\n        os = new FileOutputStream(dest);\r\n        byte[] buffer = new byte[1024];\r\n        int length;\r\n        while ((length = is.read(buffer)) &gt; 0) {\r\n            os.write(buffer, 0, length);\r\n        }\r\n    } finally {\r\n        is.close();\r\n        os.close();\r\n    }\r\n}\r\n\r\n    \r\npublic void resize(String inputImagePath,String outputImagePath,  int scaledHeight) throws IOException {\r\n        File inputFile = new File(inputImagePath);\r\n        BufferedImage inputImage = ImageIO.read(inputFile);\r\n        debug(\&quot;inputImage.getWidth() = \&quot;+inputImage.getWidth());\r\n        debug(\&quot;inputImage.getHeight() = \&quot;+inputImage.getHeight());\r\n        int height = inputImage.getHeight();\r\n        int scaledWidth = (inputImage.getWidth() * scaledHeight)\/inputImage.getHeight();\r\n        if(height &gt;= scaledHeight) {\r\n            debug(\&quot;height &gt;= scaledHeight\&quot;);\r\n            resize(inputImagePath, outputImagePath, scaledWidth, scaledHeight);\r\n        }else{\r\n            debug(\&quot;height &lt; scaledHeight\&quot;);\r\n            try {\r\n                copyFileUsingStream(new File(inputImagePath),new File(outputImagePath));\r\n                deleteFile(inputFile);\r\n            }catch (Exception e) {\r\n                error(e,e.toString());\r\n            }\r\n        }\r\n}\r\npublic  String base64BinaryToFile(String imageString) {\r\n    String inoutImageOriginal = createFile(\&quot;imageOriginal.jpg\&quot;);\r\n    try {\r\n        BufferedImage image = null;\r\n        byte[] imageByte;\r\n\r\n        BASE64Decoder decoder = new BASE64Decoder();\r\n        imageByte = decoder.decodeBuffer(imageString);\r\n        ByteArrayInputStream bis = new ByteArrayInputStream(imageByte);\r\n        image = ImageIO.read(bis);\r\n        bis.close();\r\n        File fileOriginal = new File(inoutImageOriginal);\r\n        ImageIO.write(image, \&quot;jpg\&quot;, fileOriginal);\r\n    }catch (Exception e){\r\n        error(e,e.toString());\r\n    }\r\n    return  inoutImageOriginal;\r\n}\r\npublic String encodeFileToBase64Binary(File file) throws Exception{\r\n        FileInputStream fileInputStreamReader = new FileInputStream(file);\r\n        byte[] bytes = new byte[(int)file.length()];\r\n        fileInputStreamReader.read(bytes);\r\n        return new String(Base64.encodeBase64(bytes), \&quot;UTF-8\&quot;);\r\n    }\r\npublic processImage(){\r\n    \/\/String outputImagePath4 = \&quot;\/Users\/prince\/Downloads\/Puppy_height.jpg\&quot;;\r\n    String outputImagePath4 = createFile(\&quot;imageResize.jpg\&quot;);\r\n    try{\r\n        \/\/String imageString = \&quot;\/9j\/4AAQSkZJRgABAQEAYABgAAD\/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz\/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz\/wAARCAB6AN0DASIAAhEBAxEB\/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL\/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6\/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL\/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6\/9oADAMBAAIRAxEAPwD9\/KKKKACiiigAooooAKKKKACiiigAoor5e\/bu\/wCCu\/wZ\/YGsr2y8SeIYdY8awQLLB4V0phPqU5f\/AFe5fuxKxxy5HB4B6V2YHAYnG1lQwsHOT6L+tF5vQzqVoU1ebsfUDMEUk8AckntTftEefvp\/31X5f+GdR\/bq\/wCCoOjW2rwXOk\/syfDTVV8yGASSSa9dwnBV9\/liQblYMNvlD\/aaui8Rf8EOPH+keHrd\/DP7Qnid\/EdpH5qalqn2o3DXII2sJYrlSiAZGMN+NfRLhzB0Zeyx+NhTn\/KlKdvWUfdXybPPq46va9Gk2vPT7j9IFbcMjkHkEd6Wvzp\/4Jyfta\/GH4T\/APBQPxX+yn8aLxfF9\/pegr4l8PeJbcPIZbMsB5c7sS55JUO\/JKHPJr9Fq8PNcsqYCsqU2pJpSjJXtKL2auloduGr+1hzWs+wUUUV5puFFFFABRRRQAUUUUAFFFFABRRRQAZopAMCloAKKKKACiiigAooooAKyPHnjzRvhh4P1DX\/ABBqVno+i6TA1zeXt3KIobaNRlmdmIAAA6k1r1+Sf\/BzH4u1Hxl8Vv2ZPg7qmvyeH\/hl8S\/Fbp4onhmERaKN7ZB5jMQuwLPIQGO124P3a9bJMtWPxkMNKXLF7u17JK706mOInKFNyjuU\/iJ\/wVA+Nv8AwWF+OOqfCj9kJT4R8AaNIF8Q\/EXUMwymE8YiTG+PeQSm0iVlwT5fIr6h\/YE\/4Ia\/C39iXx\/cePr281n4ifEnVLWOK+1rxA0c6RyrgvJbRFSYtzZJy7HnrX0r+zL+zR4F\/ZV+FOmeFvAPh\/StC0i0tooibOBUe8KLgSSuOZG68sTjOBgcV6BIVC\/McD64r0c2zyk19UyyHsqMdP78\/wC9N932Wi2OWhg1\/Ervml+C9B1ZXjjxppvw58H6lr2sXUdlpekW73V1PIcLFGgyT\/8AWHJ7V88\/tpf8FefgP+wx4dvJ\/FvjnR7zWrcER6Fpdyl3qE0nZDGhOwk8fPivjH4j\/H79tD\/gsf8AC7VbD4TfDuL9nr4aanZuIdW8Wzh9T14BiyBVMeYUmRkxtjcKUY+eQy1jl3D9ety18V+7oXV5Sajp15b6ydtrJjxGOhGLVL3pdlr956f\/AMEmfB2u\/td\/tx\/F\/wDbC1mSG18P+KLU+BvAunRuHb+ybedHe6kxwDJJEpVThgTLkYYZ\/RqvH\/2C\/wBk7SP2Jv2UfB\/w80mBYTo9kr6i4mab7TfSfPcy725O6VnOfevYKx4ix1PFY6csP\/Cj7sPKEdImuDpSp0kp7vVhRTWHNOrxDqCikzk0tF7gFFFJnmgBaKQnFLQAUUUUAFFFFABRRRQAUUUUAFFFJmgBaKKKACvFv26P2Bfhv\/wUQ+C8vgn4j6R9tshJ9osb2Dat5pU+MCaB2BCtg45BU9wcDHtNeDft1\/8ABRz4X\/8ABPbwAdX8ea7DHqVzGW03Q7VhLqWpnO0eXDnO3dgF2wgzyc4B7sshi54qCwCl7W\/u8u9\/KxjiJU4wbq7HyT4Z\/wCCR37QX7I9jJZfDD9rrWdO8Exwnfa+JtIS9bS4Ixx5TNIYVAQAEiNOnavif433fxG\/bi8f618MPhl8Yvib+0x4uiRVvr7Rohovg3QiXwzPK0jxzDk8kqv9zPAr6y8O\/Cf9pf8A4Le6jLe\/FOC\/+Av7N9wd1l4Wt5PL1\/xNHu3I13lSUQrjjKDnhH+9X174v1H4E\/8ABFD9jbUtUsNEs\/B\/hHSF\/d2enWj3F\/r1+yERx\/KGkmuJWXG9zgZLMyqCR+kU83rYHEKVZrEY1u3LGMbJ\/wB+SXvS7qOndnh1cvjWTd5Rp9Vqn8j5x\/4Jkf8ABvL4O\/Zfvbfxr8YH0z4lfENJEuLKGRXm0rw8w6eQsgBkf1d1Az91RX6SRRrBGEUYVRgAdhX5z\/8ABPr\/AILA\/EX9q3\/goVcfD3xj4CtvAvgvxP4Jbxf4PhnjkOqXMQnjQPPIzhcMhc7FjGCPvHv+il\/ewaXZy3NxJHBBAhkkkc4VFAyST2AAr5Hiv+13jUs3leo0mkmnFJ7KPL7q9Eell31ZUE8PpFd9\/nckllWCJnchVQFmJ7AV+XP7R3\/BxDruhfD7xD42+FPwb1Xxb8OfBuvrpeseLb6dotNa3+0eS00GxSWJOMAkY3LuAzXYftCf8FrvA\/x9\/Yp\/ain+Fv8AbA1r4ZaRJpdpeXkYgj1Oa88y1t7q0wxdkWXDfMqn7vHPHlH7U\/wQ0z9iD\/g1q1jwVqtvGLo+EbKG9jkj+b+0r+8glJbH8ccswGemY17CvSyjJ6WFgpZnh3KdSpGnGLbg43V3K2jejVuhhXxMq0rYaWi1b6H6h\/Aj4x6P+0N8FvCnjrw\/K02ieL9JtdZsWbG\/ybiFJUDAEgMFcZHY5rrK+dP+CRfgmf4d\/wDBMD4B6VcrKlzD4E0iWVJRh43ltIpShH+yX2\/hXqf7Q\/xin+BXwvuPENr4b1vxfdQ3VpaxaTpEYkvLnz7mKAsinqEEhdvRUY+9fHYyiqeInSp62bS67P8AE9SD9xOTO2KfPmvFf25\/29PAX7AfwkbxV431EQLNKLays4vmuL2YglURByenJAOM5xXzx+3j\/wAFrdL+DXjyD4WfBXw5efGb40ao7QW+kaQDLZ6a4JVmu5UyQEPLKnTHzOtcl+yV\/wAEXNa+Lfxbs\/jh+13ro+JXxM3faLHwyziTw\/4a+beiLEPkldM44zGCP+Wn3j9Jg8go4eEcXncnTptXjBfxJ9rJ7R\/vPTtqcM8Y6r9lh9+\/Q9U\/4JEft3fF\/wDb+8PeLPF3jv4c2HgXwP50I8IXUc0huNZiJlMjuknOwDydrgANuyMjmvsymW9tHaQrHEixxoAqqowFA6CvD\/22P+Civwr\/AGB\/Akus+PfEMMN2U3Wmj2n7\/UtQbOAscI56\/wATYX3rx50pZjjeTLsO05fDCF5P9W+7Omn+5ppVZa92e50VyXwH+L9h+0B8F\/C3jjS7TUbHTfFmmQara21\/D5N1BHMgdVlTJ2uARkZPPc11tebUpzpzdOorNaNdmjoTvqgoooqACiiigAooooAKKKKACmsvHH1p1IBigAQnHNLXyP8A8FHP+Ck9x+zDqFn8PPh14dn8efGPxLaG50\/SYt6waZbZKvfXcoUrFCnUliB6kDmvhuL9oL9q39mD4Qn9pTwt8afDH7Svgqwkk\/4WV4Uhv4RZeG0hVXmWzn3lVkiVxkoFXaVPlyg+ZX1OD4SxdfCRxc5Rgp\/ApO3P2t0Seycmk3ojz55lSjV9ktX5H2F\/wVE\/4KwQfswxr8MfhNb2vj\/9oDxLNDp+l+H7UtMNJM52i5u2X5Ygo+YK7AnGenNZX\/BPf\/gjTpvwk8ZD4yfHPWrn4wfHrXEFxdapq5EtloLsSxhsofuLtzgOclcYTavFeP8Aib\/gmT4c\/wCCwNr4K\/au+GXxY8f\/AAj1PxnpsGoz6b5LXlq7KdssbRrPC6klCp2SBGI37SDivpf\/AIJFftm+IP2oPhF4+0PxzJZyeMfg54zv\/A2qXsLqY9T+y7Nl1kYXLBirYA+aM8DNeniYxw+UzjlrcZQsq917127K0lpyX0sn2vcyo+1nWbxC0e3b5+Z71+09+0d4X\/ZG+A3iX4h+ML1NP8P+GLJ7u4c\/efA+WNB1Z2OAAASSelfmd+wN8JPip\/wWe\/aB079o743w\/wBnfBvw5qr3vw98BXaAwSspPkXs0XR2QELvkDbzvZVUMKy\/jy2r\/wDBwL\/wUpb4Z6RcSD9l39nzVln8T3sMn+jeMdVjPNojr9+M\/MhIyFTe45aPP67+H\/D9l4V0S103TraGysbKJYYIIUCRxIowFAHAAFZSqQyPB+yhZ4qqrt\/8+4NbL+9JbvotDdJ15832V+J+dHiiF\/H3\/Bzx4YhsV\/dfD74Kzy3zdkM9\/IqDH\/bdOmeldh\/wX5\/a3uvgn+yLH8PvDF6V+Ifxlv4PC+iWlvKFujHNIFuJQM\/d2YiJ7Gcds1w3wFvJ\/wDiJ9+PCShmUfCTTjBzgBRPp+R+LM3618\/698L9M\/4Km\/8ABwz8bPBfiq41qHw78JPCC2+jXlje+VPpV6FtELQDqreZcTPlQeYkzXu4SjhZZhhcRj2\/ZUKEJvu3rypd9XfzSsediJy9i40ert\/mc\/qf\/BNjVNG\/4KufBb4G+EvDE+nfDjw94L0LV\/iBq8ltOLPxA2n3clzInmYCkyzGGLbnI3DoK9w\/4OCNcuf2nfj1+zb+yZYGc2vxV8V2+r+JlhBDLpVrIQRn0x9of1zAh7V2v\/BIf9pz4m+Ev2svjH+yX8WtbfxlrnwetoNT8PeKZmzfavpMzLsN03OZVS4gwwPygsuDszXyh44\/b28EfDf\/AILzfG340fEmW+ki+C2lf8IF4J0HTITcXus3rKyS+Vuwsf37jIz\/AMt+M4OeqjUzLG5oqtWKqSwtJyp2e8p7S+bd+0bdhU4UsPST2Un9y7H7eapq+h\/CPwI91fXVhofh\/QbQb5p5Vht7OCNccsxwqgDua\/ML9o3\/AIKD\/Fv\/AIKxfEOf4Qfsj295pXgPzWs\/FPxVmieG1t492147J+Mnbnlfn46AE1paJ+y58e\/+Cz\/iaLxD8b59W+EX7PMjB7D4dWs7R6r4hiDBle+kAG2N8KQBhgOgU\/Mf0a+Ffwk8Jfs7fDiy8O+FNG0vwz4a0SAR29pZwrDBbxooA6ewGSeTjk18p\/sWTO9S1fFeTvTpvze1SfazcV3bO3mliYXXuw\/P\/gHkn\/BPz\/gml8Of+CdXwqTw\/wCDrNrvVbp\/P1fX71Vk1LWJ2+Z2lkILbd+SqA7Vz3OWPuXjLxrpPw98N3msa5qNnpWl6dC09zdXUoiigjHJZmPAFfG37XH\/AAWr8L\/DHx6nw3+DnhzUfjl8WL0mKLStAbzLLTm5XfdXCBtqqeoRWxghinWuD0v\/AIJI\/FP9vXXdK8Ufth\/EKLU9OsZlvrD4ceFFFtpmnsVV9l1dKA07KzOhVQ2AgK3DhuOeWUVakv7Rzur7NVNddak\/8Mf1lyx9QjiI\/wALBrm8+i+fcrfGr\/grp4+\/bH8e3\/ws\/Y18JjxfqoUw6j8QdVRofDWhochnVyMySY5Tgg9lbIrq\/wBhv\/ghZ4Y+CvjVPiV8afEV\/wDHP4xzTm8bW9ceSS10yVjuItoGYqdrE7XkDMABtEY+UfaXwl+Dvhb4EeB7Lw14O0HTPDmhaegjgs7GARRqAAMnHLMcDLHJPcmukassXn1OEZYbKafsaT3bfNUl\/inZW\/wxsvU2p4NN89d80vw+SBEEa4HSlpnzU4dK+ZO21haKKKACiiigAooooAKKKKACo7lzHbSMOoUkYGe1SUUAfzwftMftP3el\/s7+KvCXiLT72T9oP4i+P9XOtapYNNZ3dvpsKslpZzSAbmWRdqJGMR4G4nBycr\/gnPpXizxL+zrqv7HHg7RrG38XfFTxpNrXjC6u5PNtdE8PpFbhllj4LM4iAJx8+\/b0FfUf\/Bzz8D\/A\/wAcfHXwo8GeCUE37SfizVY4tG0vTrZC99ZsSr3F2wXgIUUKzsMKJD91CR98f8EuP+CeGjf8E6v2adO8PtLBqfi+\/giuvEuslcG+u\/LUPtJ5ESY2oM9FB4JNfumN4pwVDIKVZUv3s5c0YvpJaXS\/kWjj0b9D5OjlmI+vSkpJwe\/f5G5+1x8avCP\/AATJ\/YB8R+IdOsdP0bQvh74eNpoWmRBY43lSPy7W2jX+Is+wYAJPJPc1+T\/hvVviJ+z5+yT4J\/ZH+FEv2n9pj9peebx18QtQDHHhG31JFMrzMMlHFusaNzkBHYAl1z7B\/wAFZf2uPDf7Qv7Qk9\/rMrzfs\/8A7JtyNZ8RKV\/d+OPGQdkstCiGSJRGyxlyF+UvKGwApP0h\/wAEU\/2IfEXwy8L+KPj78XIhcfHT47XH9r6q8iru0PTX2vbacmCdoVdrMM5G2NCAYq+bwaWTZW8VjFzVJSUuV9Za8il3Ub88k+rSZ6TticQ+R6R08rf530PoH\/gnx+xN4Y\/4J7fsneFvhn4agiEejWok1K8VMPql84BuLlz1Jd84z0UKO1eYfsQ\/8FfvAf7c37SnxX+GWg215pWt\/DW+kgg+1suNcto5TC91DjjYJMDBO7514roP+Ctn7bGlfsL\/ALGXiPxNe6mdM1LUk\/srSmTmZriZWGY16l1QOy4\/iC9jX5Xab+xJ8X\/2KfgH8I\/2vvhn8OL+8+MVzcX3\/CV+FbKBrmS80zUY3W3llihw29QInkAyVkmUnhGI83LMmoZhgq+YZnPlnVly03subdtvZLp5GmJxU6dRUqEW7b2R9r\/sZ6JcfFL\/AILv\/tRePbd4JtG8NeHdF8Fq6kM32kiOWZSexRoXyOo3L7V7T8eP+CSPgH4sftU6Z8cPD+qa\/wDDz4r2SCC513QLgwnVYMKphuYiSkqkKvUZO0c1W\/4Iw\/sTar+xZ+xVpNl4uNxN8R\/Gt1N4s8YXNy\/mXMmo3eHaKRyWLGJNkWdx5Rjk5yfrTFeJnGbTWO\/2WXuU4xprZ3UFa\/Z3d2dWHw6VO0uuv3ngX7Nf\/BO\/wd+zj+0V8Tfi1Dd6jrnxC+K1xC+saneEAQwRKFjtoEH+ri+UEjJyVXpiu1j\/AGPvhVB8U7rxz\/wrrwUfGF5L9on1p9FtjfSSYxvMxTfu465qh+1t+258Mv2H\/h1N4k+I\/irTdAtlQm2tXfzLzUH5wkMCAySEkY+VSBnkiviUfEH9qb\/gsbCbbwtZ3v7M\/wAAr8iQeIrlS\/inxJbHtboGUQxSJzv44bguKnB4TGYtPFVqvs6eznJ2XolvL0in8ia1SnG0Ix5pLZdvXsfQ\/wC25\/wV6+Fn7GWrQeHDNf8Ajn4gahKba08L+G4vt1953RRKF\/1Yzxzz6A185aJ+yd+1J\/wVen\/tT48eI7j4H\/CO+G+38B+HZANWvYi2Qt5Oc7cpgMjgkHIMakZH1j+xb\/wS6+Dv7CdtLceDfDa3XiW8B+2+I9Wb7Zqt2Ty371h+7Uk5KRhVJ5IJ5r6HreOc4fL9Mqjef\/Pya95f4Fqo+usvNGUcLXrPmxMrf3Vt8+55V+yp+xN8MP2KfBY0P4beEdL8OW7Kq3FxGhkvL4gD5p7hyZZT3y7HGTjFeq0UV83VrVKs3Uqu8nu3uejCEYLlgrIKKKKzKCiiigAooooAKKKKACiiigAooooAKKKKAPyu\/aW\/ZX+PH7In\/BVXxx+1F4P+GVr8frLxZpdto+mafFfJbX\/hiNEhD7FKFipMTD92GJEhz95sdTq2o\/tv\/wDBRvSYdC1LQ9L\/AGWPhzqDFdavRKt54lurckbreDLERlhwXKxHk\/eHFfpRX59f8F8f2zfEvw2+F3hH4CfCt5ZPjH+0JqI8PaZ5QKnTrByI7m48zIEbHzEQMfuo0r5BQZ+zy7NcTj8TQpKnDnglFTavyxjrzNX5fdWux5lfDKEZS5nZ9EfLv7CH7NnhL\/goF+2Lp3gnwZZOn7JP7KGq+faCYrM3xC8V7iWvblyAJgDuZjtxtKDAExC\/tLkIMdK8a\/4J+\/sX+G\/2Af2TvCfww8MxqYNDtQ19ebAsmqXr4a4unx\/FI+T7DaO1ezFc15PEGaRxuJ\/dK1OOkfPvJ+cnq\/u6HVhKEaVNJHjX7W\/7BPw0\/bfvvBc3xH0L\/hIE8B6r\/bGl20l1NHbi4wBukjR1WTgcBwQM17HbwLa26RoMJGoVQB0Ap3Ea5J4HXPavkD9uP\/gsZ4C\/ZW1iTwX4Ss7\/AOLHxeunNvY+EfDqNczRyn5QbmRQViQN1B+bg8DrXLgsJjce44bDpyUenSN9229Iru20iqtSlS9+el\/vZ9YeJ\/FWm+CdBudU1i\/tNL02yjMtxdXUqxQwIOrM7YCgepr4H+KX\/BXnxb+1P411j4b\/ALIXg9\/HevW8v2K68d6iBD4Y8PPu2vK5bDT7cHaq\/fONoYc1z3gn\/gm78b\/+CkviHTvGf7XXik6H4UV0ubP4UeGJ2t9PjUfMFvZlYvKeny7iw6FhytfoN8LPhF4Y+CHg228PeENA0nw3otmMRWenWqW8SnudqgAk9yea9dwyzLF79sRW7Jv2cX59aj9Go\/4jmvXrvT3I\/j\/wD5T\/AGT\/APgjf4V+Hfjk\/Er4z6zc\/Hf4w3TCU654jiElnpJO4mOztDmONQW4LBmXau3Zjn7OAwOOlI+SOlKv3RXhZhmWJxtT2mJnzNaJbJLtFLSK8kkjsp0oU1aKAdKWmuuTSjpXEaC0UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFGc0VGMlvxo62Aj1XVbfQ9MuLy7ljt7W1jaWaWRgqRooyWYngADkk8Ada\/K3\/gk7oc3\/AAVA\/wCCkvxS\/bE8QwXD+E\/CN1N4H+F0EgYQrbR7lnvUBxlmVyM4xm4kHVBj1f8A4OI\/2ptb+Fv7JGk\/CLwRDJdfET9onVF8E6RGjMjQwzbUuJtw4GPMjj5IH74ntX1V+w9+zFo\/7FP7IfgH4aaSIUtPCOjQWs8yjatxcbd9xN7eZM0j\/wDAq+owsvqOVTrr46\/uR7qK+J\/P4Tkk4zrcr+zqes15V+1p+2l8OP2JvhzN4k+Iniax0K22MbW3Zw15qLgf6uCL70jfQYGecV41+0N\/wUy+2fFN\/hP8DtEf4kfE9WMepJETHYeGEzt828lxiMZzgEgnHGc1B8Bf+CWWn6h8SR8TvjnPpnxO+JsoBhe4t\/O0vQVD71jtI5QTlegkbB4yqo2SefCZZhqUPrGZycY9IR+OX3\/Cv7z+SZlWxFab9nhV\/wBvPZf5\/I8Mj8e\/tO\/8FjL2SLwuNX\/Zu\/Z91C3x\/bF1CP8AhJfE0T8jyVyDCjIc7lIGDw0g6\/XH7EP\/AATZ+FX7A3hGOy8FaDHJrUsey\/8AEWoAXGramx5cyTn5trNzsXCg9s817zHbpCFCqAEGFH90e1DruasswzydePsMPBUqP8kb6+cnvJ+b+VloGHy+MJe1rNzn3f6LZC9BwKUHIoAwtKOleJqegFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFNQYJ+tOpi9\/wDepPuB8rf8FLf+CYsH7fer\/DrxPpfjG98BeP8A4UahLqXhvWrezS5FtJJ5e7ehwxGYoyMMPu+9eKWn\/BBzXfjP4hi1H49ftDfEH4lQJIHfR9PB0nTpQDkBlMkrf98lT71+i9Fe5heIsfhqKoUZ2SvbRXV+ztc554WlOXPJanC\/AL9mnwL+y94Gi8OeAvDWneG9JjO9orVTvnfvJK5JeRz1LOSxJJJJJruqa5waUdK8epVnUm51G231epuoqKshaKKKgYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAH\/\/Z\&quot;;\r\n        \/\/debug(imageString);\r\n        \/\/String imageString = \&quot;iVBORw0KGgoAAAANSUhEUgAAAFkAAAArCAYAAAAT4SRlAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5JfxUYAAA3ESURBVHja7Jt7VNPn+cCf3L5JSALhkkAgJBAJt3ALoGgEWxCHcLyd6bKjY8W5tee3nfbYn5uetXautttpp+fnZt2qbbehlY2qbaEiKBUKaBGo3DUa7rdAQm7kZi7fJN\/sjwnlJqYeOWc\/x3PO9488z\/s+3zefvO\/zPs\/7\/Qbn8XhgRZZX8CsIViD\/v5TyEu3uFcjLKJeKlUWff\/754drq5oxpHXEFy9OVG1XDB3gBmcqNefEtKzN5GaS9q5er0+m4vr6+mpVwsUzS20uUkEjGgPBwavcK5GUSuVye5fF4IDQ0sG+2fiUmP03I9ybW43EaZTDf1gFAXYH8tKW1DQQkEgn1DwoajV1LHVyZycsgnU22HRQP3\/2TX8TvXbZipPcu6nftsjz3vxVyR0dHfkJCQo14Pbtv2SDXXRvdf\/3K4K\/+GwH3jTgQ25SeExcZ1LGsZbVMJnv+WT9s+qb5nuDwwQ\/O9t9D6bP1AwMDGQ6Hgx4ZCcsH+ev68SS8O5zMpImMzzJk9ZiPyKJcV\/TRieGyOTO5X782mG0fFK6GkWWD3N7evhVFUQmHw5E\/y5AjIyM6SCRSncfjgXN\/q9o3re\/p6cmiUqmWR\/V7KpBHR8lJNmwA2By071mGLEoHBZ6IoVQKIVfWYPppVzVIAADcGr9A3QMTc9kg1153pRuNRpZer1dHRTFanvVNLiwsTI7D4YDJZEpKSkqPXy\/H8rRabZi\/v79y2SA33zAU4bFV2aFBzlGRBPqedcjRycwvR3U9EBK2BiYmiZKbX3Vfw2MMfgiHLPcacvm55sLum+pYb2+qVCpjdTodZGZmlj4rINua+wXH3z5zbDFbfDzUMRiMagqFAjweD5RKJVAoFPnOnZvf8grymQ9l+8tK1e+UFo++395sFzx2w2vTcTHMQiAQHH05eayTzwrkq5eURy3aEP5iNn4M2FKf85RqHcq3kjPiYcqoBALRg3KjwP1YyM0dWmFTU5PU19eXq9frsy9fvvzrxw1GpVIJ9Xp9tkAgaOUII93PAuCqC\/YdSqVSyGAw9I9qU\/SjDeeYTKaSyWTAmjVrYKnMYg5kRV9QkmIYkQSwiJCcGgldjY7dNRdhx1Kdh\/ucGXhMB2kJ3Jrl+tIt163pT9PfqByo\/3j\/\/v7hLmAvZu9uH9hq1LkyUtKDy5fyE5dhuerx6d+Qku4PP3+lYI9XkIeG1ElkMhlUKhVoNBoIDw+nV1Q0HFwS8vCw2OPxDMbE+N6a1n36ScPOrrYJztMAcuJk+ZHS0tJjV88NFT4Nf90do+wzZ8rO9vf3\/6m4+NKpv\/6xds5qbawdFU9MTMQSicSR2NjYG3Nm+JWW7NmfVyfzR8LDw2XV1dUVNBrO4BVkjfG+AEfWgR0bg7HJdrCZ8DA+bBD33VZxF+t4rwvYWoUzlst2DSZmghwAoKZhKKOxPmhf6QeGYrV81oEqAHxZBVl7pBfbr1+dlHgD5NoXWO7kQFgSjZia\/dWXype76tVJi7Urfc94sP7S0isOAKCnFbi15dbXEVeE1GkNAbzHV9orM2586YWbjQ0P892yzxqP6nXjEklWegk3lmib7vvn41VHKs5j\/\/fOwfGzw\/1AmNYnJJH1OByAVvuA6xVkEolkc7lc4Ha7AcMwcDgc4HA4qEajMWSxjiYTsKxWq19+fv570zoikYg6HI4CDMPyKiqa5qwChwMYOBxOfOPGjb3eQB4eHhbbbDa6VCpeTSKR0LKyssPz2\/zuyMen2tratl66VHmkrvpmxlL+Pv20\/qjBYNhPJpMBRdG6rKysbSKRqNbhcFDLytoO\/+nYraMBAQHjwcHBddu2Cd6d39\/Pz0+Nw+GKKiurDgAADPU7CJWXO3I5HI7c35+m9ApyjEjQaHOawIOngNtFADeGAAlPA7ybTFg0dRuEdArJF83ZFVoxrcORSW6jZQD4q2jQ3aSUyh7OEAAABAEbhUIF7IEjwBvId5sd0sRVG1qTc6GVldhZbdClcouPo0em7Rf+PrpPOxqR7PIws4jkEHFTNXH\/o3x9\/NfeF+0Gfsiq0LWgVmohlEuQ5ezyqSj635h3874fenxE1Si80zl2pLNteMsLL7NeCImHORvZywcL3qIym1V2Z2tpW63zxV\/tvXnjzMlPLuA8dvjlb\/IPRSWB3ivILBZr0Ol0AoZhQCAQgE6nA4ZhgCCIbbGOXV1dedHR0bdm63x9fTV4PL4jOjoSUlJSRJWVjQembVwuyOx2O8zvs2iBc0sjtFqtftOnWvn5+SfVanVkZ2dnAQDAgHyQ2trauoPD4WTt2ZMKer0eVCqVYIkTwmw8Hl8wPj4BbrcbaDTaDJQ9P4wvTUlJqfr3anP4JKelKxbz8dtj+\/YWFm47JBKJ6tls9uAfThXtKti+zqsNfwayMI7QSiRaUKPRCDQyF6Kiw8FmNwCFYVjwKw1OmAnjI3eT1ktEF2frxdE+So\/V46caNbyWtyeYSAzumqkAJxX2GKNKbklMIVQ9ajDH3646VlrSs9tqoQfg8XeEPB50AwDExnMtSIhpSO3sQZr+6ZFWfqD9G7gcyLYfCEOZfGCobFXgcmqohj5A5vusvGrK1ugYfPXEOEyMjoDBfGskbwv7+Ow2doslEJ3iAGYOX3KVRaWBQiCkNCvVbYLvsuHOQI4KAVtmZmYJjUYbkUq3bEYQ5M9EIhGi0uMX\/LJmszkQQRCbUAiN820+Pj5GIpGIhkbR3AcO\/+K1WbMpd\/369aWpmWmPLD\/Hx8dFt2\/f\/qfb7W7m8\/kX2WyYeVa2cePG0yaTSXzx4sULMplsN5PJVMWlgpJAADQwMBBIJJKNKQR0vs+HT5AlKIqC0+kEFos1yhMFzwkHg4ODYgKBADgcDloaOkVLAaPT6Xq1Ws17IsgAADuk4t9\/vzD6UNYOqB4bl4miYtiti3UaG7Al8aOw5tAEMAIADOithEvF5qLWayDhsmgjVLLdOie+yowBeu1t\/ov7sn++5HnthEdoNQfB+JgLwkJ95MxV31ZRYTHsPo8PCXAOF3hsqC17I\/s0AMCUHrh2WwCwWLQFZ7lN7RA7NkpMIlLogFBcgIFlZOfu5AVFFsefpwxnBQIecwLeyaLOt18sHd5ZfPqblwEAiAQyOjw0xr\/XNRXgLeQ5D1Iz4iIGM+IiBgEA9Ho9JySItWh8UigUIj6fP\/MCx5UrVw7W\/UP\/TlJ0HLhQO7BYQR\/NibHNzdK0tLTyoCVKT8XD1AhFUaipqYEdOaI5b+Gw2TBEo9FkOoVOtG7dugpJXlrLw6yFTiKRAI\/HL\/B96tRfzrus\/PRgdhj4s3zAPGXQSzZn3JqbO6NsnU7HdcEUIAiCrs4NmzOxPi6WF5WUlJwI9KWoSYCHuKj02wwGAzAMIz7RTAYA0PUB8sUHuv+ZMk+xDXazz+H9Ny801njmVF12E+LH5TFnIN+qUe+m+9BAo5oEnXYSaHTQzTw1kIFfU736xz33dc8vNRC7LyAPKD5ChxkHDJQOFDLOPNueIAA1xaoGahgJMvLTZs5JphQgIrv8gCdaVTffJ9nsj3DpPrAjWwxj2vuQmBm+4BArSYyoAwJNChtyF8TP+56bb\/+6tuUlXtDqgKiwbbENtfpTI+NTzWuzo\/6eIA5UPzHkkpIvjhUXF58OCwuTp6amVuFwODh\/\/vwJeZuMAwBw\/apJcufOndz134ttAQDoGQO6RqPhE4lE2LRpE2AYBg8ePGB+G4sN2SqVSqJQKESaASA8aiAez79nMYVCAavVqkxMjK2d3wbDMAKTyawTCvEt38bcXondblcnJiZ+Ob89DocDf39\/UKvN4HQ6+3JyBB8udu\/t27f\/IT09\/a3CwuwD821cLldusVhg7dokiImJgZaWloqiosL93yUmz5nyb7\/xzWnzEEscGkzti1ut+exnrwSe6JMnUy99onrnj0fvNrz6quiHTV\/f\/7HJ4JwpUBAAmx+Fq8aDrx\/OwwDDlBFQpxEBoAEAwOWKzw5Gx0SWr00LKWetenS4sBuBgYMJwPBWiIjj3OSnw4JQlZDqX5EkDG+hz\/Kjn5rkRgq4rckZxAUxefN2\/ru9d2y5tXUV4pd+GbU34uEeMl9ytkXU5GyLWDQd2\/ID3m\/HJpsiK786CQwGQ7N5p\/B45Lw82mvIZ\/7yzX4ymWymsgMy7t27B++\/8rMTAADCWIZNKt31xnuy8uyrVzvbRWIRqDVj1TPPvcLBjSCIDcEh0N3dDWQyWR0YGKgAAPis7PpWk8nEOnDgp7sSxLBkVaRWG3gWi8UWhDDkGzZsOLdYm9d+s+\/QfN3Q0JB48+bN7y3WXlooKX37UGNeQUHBiQ3PMbuf5LwjNU2o+Kj4jZyh+0CPjPtucKeF8OabbwIAwIcnu08yfVlSo0FWJX0h4VCUKGQm1QpgAep8QLXdam4QDk8Ms+PjYs+ukYTcnFmyvf1Cu2l8nVYnl+\/Zm\/Pq+i2h9QAAOCJuYvWatDJxGn3scQMR8CgTeq2e8L281JO5W1fVe\/sF7spux7\/6etbrj7I\/t4lXHpdCeSLAs8WftTA9\/M6Q1eOB\/r29vcSkOP6NnS8mfjS\/YYyY2dXbaUm5P9gfJJFILsQn0mTTtnBefP2U0ozPy9304cadgsqZKjLQHw0Lo095OxjJOlGDSmli8PhBWm\/7uFGaTiAMGoP\/ZPF4PDPXQL+aMPvzYte5s+VFj2uzcs29cCt\/MVt+WXkJfAXyCuQV8VL+NQA5k71RKFmZNgAAAABJRU5ErkJggg==\&quot;;\r\n        String imageString = encodeFileToBase64Binary(new File(\&quot;\/Users\/prince\/Downloads\/imageOriginal.jpg\&quot;));\r\n        String inoutImageOriginal = base64BinaryToFile(imageString);\r\n\r\n        resize(inoutImageOriginal, outputImagePath4, 80);\r\n        File f =  new File(outputImagePath4);\r\n        String encodstring = encodeFileToBase64Binary(f);\r\n        \/\/debug(encodstring);\r\n        setVariable(\&quot;imageResize\&quot;,encodstring);\r\n        File imageResize = new File(outputImagePath4);\r\n        deleteFile(imageResize);\r\n    } catch (Exception e) {\r\n        error(e,\&quot;Error resizing the image.\&quot;);\r\n    }\r\n}\r\ngetValueGen();\r\nprocessImage();\r\n&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>process1::genCover</string>
               <packageActivityPlugin>
                  <processDefId>process1</processDefId>
                  <activityDefId>genCover</activityDefId>
                  <pluginName>org.joget.sample.GenerateCoverService</pluginName>
                  <pluginProperties>{&quot;generateApi&quot;:&quot;http:\/\/localhost:9090\/api\/generateDocx&quot;,&quot;tableName&quot;:&quot;solution&quot;,&quot;targetUploadId&quot;:&quot;targetCover&quot;,&quot;processId&quot;:&quot;#assignment.processId#&quot;,&quot;resourceFile&quot;:&quot;T1.docx&quot;,&quot;targetName&quot;:&quot;#form.solution.id#&quot;,&quot;outputType&quot;:&quot;pdf&quot;,&quot;parameters&quot;:[{&quot;key&quot;:&quot;signatureimages1&quot;,&quot;value&quot;:&quot;#variable.imageResize#&quot;},{&quot;key&quot;:&quot;Subject&quot;,&quot;value&quot;:&quot;#form.solution.subject#&quot;},{&quot;key&quot;:&quot;StandardJCI&quot;,&quot;value&quot;:&quot;Standard&quot;},{&quot;key&quot;:&quot;Unit&quot;,&quot;value&quot;:&quot;1&quot;}],&quot;loopEnable&quot;:&quot;true&quot;,&quot;tableTemplate&quot;:[{&quot;filedName&quot;:&quot;T1&quot;,&quot;fieldId&quot;:&quot;#variable.t1#&quot;},{&quot;filedName&quot;:&quot;T2&quot;,&quot;fieldId&quot;:&quot;#variable.t2#&quot;}],&quot;mergeEnable&quot;:&quot;true&quot;,&quot;formDefId&quot;:&quot;generateForm&quot;,&quot;fields&quot;:[{&quot;field&quot;:&quot;uploadPdf&quot;}],&quot;mergeEnable2&quot;:&quot;&quot;,&quot;formDefId2&quot;:&quot;&quot;,&quot;fields2&quot;:[],&quot;mergeEnable3&quot;:&quot;&quot;,&quot;formDefId3&quot;:&quot;&quot;,&quot;fields3&quot;:[],&quot;dbDriver&quot;:&quot;com.mysql.jdbc.Driver&quot;,&quot;dbHost&quot;:&quot;jdbc:mysql:\/\/localhost:3306\/jwdb6?characterEncoding=UTF-8&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&quot;,&quot;dbUsername&quot;:&quot;root&quot;,&quot;dbPassword&quot;:&quot;%%%%8lt+pkQbaOhjkwLivACbZtGwG6K4jbh+%%%%&quot;,&quot;debugJson&quot;:&quot;&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
            <entry>
               <string>process1::uploadToEasyEdit</string>
               <packageActivityPlugin>
                  <processDefId>process1</processDefId>
                  <activityDefId>uploadToEasyEdit</activityDefId>
                  <pluginName>com.joget.bcircle.UploadAlfresco</pluginName>
                  <pluginProperties>{&quot;url&quot;:&quot;#envVariable.endPoint#\/alfresco&quot;,&quot;path&quot;:&quot;\/UploadFile\/#form.solution.id#&quot;,&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;admin&quot;,&quot;parameters&quot;:[{&quot;key&quot;:&quot;ISO:Subject&quot;,&quot;value&quot;:&quot;#form.solution.subject#&quot;},{&quot;key&quot;:&quot;fileName&quot;,&quot;value&quot;:&quot;#form.solution.id#&quot;}],&quot;formDefId&quot;:&quot;solutionForm&quot;,&quot;fields&quot;:[{&quot;field&quot;:&quot;uploadDoc&quot;}],&quot;scheduleEnable&quot;:&quot;true&quot;,&quot;dbTable&quot;:&quot;solution&quot;,&quot;variableUpload&quot;:&quot;status&quot;,&quot;statusEnable&quot;:&quot;true&quot;,&quot;fieldStatus&quot;:&quot;status&quot;,&quot;statusTable&quot;:&quot;solution&quot;,&quot;isInherited&quot;:&quot;true&quot;,&quot;permissions&quot;:&quot;&quot;,&quot;statusTags&quot;:&quot;true&quot;,&quot;fieldTags&quot;:&quot;aaa;bbb;ccc&quot;}</pluginProperties>
               </packageActivityPlugin>
            </entry>
         </packageActivityPluginMap>
         <packageParticipantMap>
            <entry>
               <string>process1::part3</string>
               <packageParticipant>
                  <processDefId>process1</processDefId>
                  <participantId>part3</participantId>
                  <type>workflowVariable</type>
                  <value>user2,user</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>process1::processStartWhiteList</string>
               <packageParticipant>
                  <processDefId>process1</processDefId>
                  <participantId>processStartWhiteList</participantId>
                  <type>role</type>
                  <value>loggedInUser</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>process1::requestor</string>
               <packageParticipant>
                  <processDefId>process1</processDefId>
                  <participantId>requestor</participantId>
                  <type>requester</type>
                  <value>runProcess</value>
               </packageParticipant>
            </entry>
            <entry>
               <string>process1::part2</string>
               <packageParticipant>
                  <processDefId>process1</processDefId>
                  <participantId>part2</participantId>
                  <type>workflowVariable</type>
                  <value>user1,user</value>
               </packageParticipant>
            </entry>
         </packageParticipantMap>
      </packageDefinition>
   </packageDefinitionList>
   <formDefinitionList/>
   <userviewDefinitionList/>
   <datalistDefinitionList/>
   <builderDefinitionList/>
   <pluginDefaultPropertiesList/>
   <environmentVariableList/>
   <messageList/>
   <resourceList>
      <appResource>
         <id>B_Circle_Logo_H140PX-1.png</id>
         <appId>solutionApp</appId>
         <appVersion>1</appVersion>
         <filesize>27865</filesize>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>B_Circle_Logo_H140PX.png</id>
         <appId>solutionApp</appId>
         <appVersion>1</appVersion>
         <filesize>30427</filesize>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>Order_GenCover_-_Pass.docx</id>
         <appId>solutionApp</appId>
         <appVersion>1</appVersion>
         <filesize>54706</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;hashvariable&quot;:&quot;#appResource.Order_GenCover_-_Pass.docx#&quot;,&quot;permission&quot;:{&quot;className&quot;:&quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;,&quot;properties&quot;:{}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>T1__1_.docx</id>
         <appId>solutionApp</appId>
         <appVersion>1</appVersion>
         <filesize>17543</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
      <appResource>
         <id>T1.docx</id>
         <appId>solutionApp</appId>
         <appVersion>1</appVersion>
         <filesize>19041</filesize>
         <permissionClass>org.joget.apps.userview.lib.LoggedInUserPermission</permissionClass>
         <permissionProperties>{&quot;permission&quot;: { &quot;className&quot;: &quot;org.joget.apps.userview.lib.LoggedInUserPermission&quot;, &quot;properties&quot;: {}}}</permissionProperties>
      </appResource>
   </resourceList>
   <license>UQYzsI05twO+lGcC3QBKUw2qkU0F0TsX784aU9dRuV4vrsYQjEpgoExELH+ytnKYNHsrvoFt1u4=</license>
</appDefinition>